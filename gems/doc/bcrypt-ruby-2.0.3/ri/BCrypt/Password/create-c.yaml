--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Hashes a secret, returning a BCrypt::Password instance. Takes an optional <tt>:cost</tt> option, which is a logarithmic variable which determines how computational expensive the hash is to calculate (a <tt>:cost</tt> of 4 is twice as much work as a <tt>:cost</tt> of 3). The higher the <tt>:cost</tt> the harder it becomes for attackers to try to guess passwords (even if a copy of your database is stolen), but the slower it is to check users' passwords.
- !ruby/struct:SM::Flow::P 
  body: "Example:"
- !ruby/struct:SM::Flow::VERB 
  body: "  @password = BCrypt::Password.create(&quot;my secret&quot;, :cost =&gt; 13)\n"
full_name: BCrypt::Password::create
is_singleton: true
name: create
params: (secret, options = { :cost => BCrypt::Engine::DEFAULT_COST })
visibility: public
