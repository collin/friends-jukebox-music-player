--- !ruby/object:RI::ClassDescription 
attributes: 
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: The cost factor used to create the hash.
  name: cost
  rw: R
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: The cost factor used to create the hash.
  name: cost
  rw: R
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: The hash portion of the stored password hash.
  name: hash
  rw: R
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: The hash portion of the stored password hash.
  name: hash
  rw: R
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: The salt of the store password hash (including version and cost).
  name: salt
  rw: R
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: The salt of the store password hash (including version and cost).
  name: salt
  rw: R
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: The version of the bcrypt() algorithm used to create the hash.
  name: version
  rw: R
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: The version of the bcrypt() algorithm used to create the hash.
  name: version
  rw: R
class_methods: 
- !ruby/object:RI::MethodSummary 
  name: create
- !ruby/object:RI::MethodSummary 
  name: create
- !ruby/object:RI::MethodSummary 
  name: new
- !ruby/object:RI::MethodSummary 
  name: new
comment: 
- !ruby/struct:SM::Flow::P 
  body: A password management class which allows you to safely store users' passwords and compare them.
- !ruby/struct:SM::Flow::P 
  body: "Example usage:"
- !ruby/struct:SM::Flow::VERB 
  body: "  include BCrypt\n\n  # hash a user's password\n  @password = Password.create(&quot;my grand secret&quot;)\n  @password #=&gt; &quot;$2a$10$GtKs1Kbsig8ULHZzO1h2TetZfhO4Fmlxphp8bVKnUlZCBYYClPohG&quot;\n\n  # store it safely\n  @user.update_attribute(:password, @password)\n\n  # read it back\n  @user.reload!\n  @db_password = Password.new(@user.password)\n\n  # compare it after retrieval\n  @db_password == &quot;my grand secret&quot; #=&gt; true\n  @db_password == &quot;a paltry guess&quot;  #=&gt; false\n"
constants: []

full_name: BCrypt::Password
includes: []

instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: ==
- !ruby/object:RI::MethodSummary 
  name: ==
- !ruby/object:RI::MethodSummary 
  name: is_password?
- !ruby/object:RI::MethodSummary 
  name: is_password?
name: Password
superclass: String
